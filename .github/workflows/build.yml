name: Build
on: [push]
jobs:
  createrelease:
      name: Create Release
      runs-on: [ubuntu-latest]
      if: startsWith(github.ref, 'refs/tags/v')
      steps:
        - uses: ncipollo/release-action@v1
          with:
            token: "${{ secrets.GITHUB_TOKEN }}"
            name: Release ${{ github.ref_name }}

  build:
    name: Build packages
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            TARGET: linux
            ENV:
              DCMAKE_TOOLCHAIN_FILE: "${VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
            VCPKG_TRIPLET: "x64-linux-release"
            VCPKG_EXE: ${VCPKG_ROOT}/vcpkg
            CMD_COMPILE: |
              cd build
              cmake -DCMAKE_INSTALL_PREFIX:PATH=$PWD/../release ..
              make -j install
              cd ../release
              zip -r9 apngasm_${{github.ref_name}}_linux_AMD64.zip ./*
            OUT_FILE_NAME: release/apngasm_${{github.ref_name}}_linux_AMD64.zip

          - os: macos-12
            TARGET: macos
            ENV:
              DCMAKE_TOOLCHAIN_FILE: "${VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
              MACOSX_DEPLOYMENT_TARGET: "10.9"
              VCPKG_OSX_DEPLOYMENT_TARGET: "10.9"
              VCPKG_C_FLAGS: "-mmacosx-version-min=10.9"
              VCPKG_CXX_FLAGS: "-mmacosx-version-min=10.9"
            VCPKG_TRIPLET: "x64-osx-release"
            VCPKG_EXE: ${VCPKG_ROOT}/vcpkg
            CMD_COMPILE: |
              cd build
              cmake -DCMAKE_INSTALL_PREFIX:PATH=$PWD/../release ..
              make -j install
              cd ../release
              zip -r9 apngasm_${{github.ref_name}}_macos_AMD64.zip ./*
            OUT_FILE_NAME: release/apngasm_${{github.ref_name}}_macos_AMD64.zip

          - os: windows-2019
            TARGET: windows
            ENV:
              DCMAKE_TOOLCHAIN_FILE: "${VCPKG_ROOT}\\scripts\\buildsystems\\vcpkg.cmake"
            VCPKG_TRIPLET: "x64-windows-static-release"
            VCPKG_EXE: ${VCPKG_ROOT}\vcpkg.exe
            CMD_COMPILE: |
              cmake -DCMAKE_INSTALL_PREFIX:PATH=%cd%\..\release -DBUILD_SHARED_LIBS=OFF ..
              cmake --build . --config Release --target INSTALL
              cd ..\release
              Compress-Archive -Path ./* -Destination apngasm_${{github.ref_name}}_windows_AMD64.zip
            OUT_FILE_NAME: release/apngasm_${{github.ref_name}}_windows_AMD64.zip

    steps:
      - uses: actions/checkout@v3

      - uses: friendlyanon/setup-vcpkg@v1
        with: { committish: fba75d09065fcc76a25dcf386b1d00d33f5175af }

      - name: "Install ${{matrix.TARGET}} dependencies:"
        env: ${{ matrix.ENV }}
        run: |
          ${{ matrix.VCPKG_EXE }} install zlib:${{ matrix.VCPKG_TRIPLET }}
          ${{ matrix.VCPKG_EXE }} install libpng:${{ matrix.VCPKG_TRIPLET }}
          ${{ matrix.VCPKG_EXE }} install boost-program-options:${{ matrix.VCPKG_TRIPLET }}
          ${{ matrix.VCPKG_EXE }} install boost-regex:${{ matrix.VCPKG_TRIPLET }}
          ${{ matrix.VCPKG_EXE }} install boost-system:${{ matrix.VCPKG_TRIPLET }}
          ${{ matrix.VCPKG_EXE }} install boost-algorithm:${{ matrix.VCPKG_TRIPLET }}
          ${{ matrix.VCPKG_EXE }} install boost-property-tree:${{ matrix.VCPKG_TRIPLET }}
          ${{ matrix.VCPKG_EXE }} install boost-foreach:${{ matrix.VCPKG_TRIPLET }}

      - name: "Create directory on ${{matrix.TARGET}}:"
        run: |
          mkdir release
          mkdir build

      - name: "Compile on ${{matrix.TARGET}}:"
        env: ${{ matrix.ENV }}
        run: ${{ matrix.CMD_COMPILE }}

      - name: Get Release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ${{ matrix.OUT_FILE_NAME }}